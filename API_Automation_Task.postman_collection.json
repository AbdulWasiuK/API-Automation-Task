{
	"info": {
		"_postman_id": "4d1d04da-3b5d-42e3-b011-a5675a5f6f76",
		"name": "API Automation Task",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET ",
			"item": [
				{
					"name": "Get All Todo Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e80ee56d-964e-4936-90d0-8d55954804da",
								"exec": [
									"//Test1: To confirm status code\r",
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code name has OK has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm a variable\r",
									"pm.variables.get(\"status\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/todo",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7985d67-0081-4868-accf-1aa7d74d5b05",
								"exec": [
									"//Test1: To confirm status code\r",
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code name has OK has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm body response\r",
									"pm.test(\"Body response has a content\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}",
							"host": [
								"{{baseurl}}"
							]
						},
						"description": "https://demo.fusio-project.org/index.php/"
					},
					"response": []
				},
				{
					"name": "Get entry per ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00b2803e-6582-4dc1-91f5-fb60e7a8c80c",
								"exec": [
									"//Test1: To confirm status code\r",
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code name has OK has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm body response\r",
									"pm.test(\"Body response has a content\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/todo/?todo_id=2",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"todo",
								""
							],
							"query": [
								{
									"key": "todo_id",
									"value": "2"
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create new Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed805a48-e2ac-4ee8-94d8-ca62e2c71efa",
								"exec": [
									"//Test1: To confirm status code\r",
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code name has OK has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm body response\r",
									"pm.test(\"Body response has a content\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"1\",\n    \"status\": \"1\",\n    \"title\": \"Task 1\",\n    \"insertDate\": \"2020-04-10 15:58:27\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/todo",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"todo"
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete a todo per ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a37a2aef-45f8-4527-9c0f-758128449268",
								"exec": [
									"//Test1: To confirm status code\r",
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code name has OK has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm body response\r",
									"pm.test(\"Body response has a content\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/todo?todo_id=2",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"todo"
							],
							"query": [
								{
									"key": "todo_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}